# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false


    my_activator:
        class: AppBundle\TranslationActivator\RoleActivator
        arguments: ["@security.authorization_checker"]

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Form,Entity,Doctrine,Repository,Tests,Provider,EventListener}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    AppBundle\Repository\WineConstructorRepository:
              factory: doctrine.orm.entity_manager:getRepository
              arguments:
                  - AppBundle\Entity\WineConstructor

    AppBundle\Repository\StepRepository:
              factory: doctrine.orm.entity_manager:getRepository
              arguments:
                  - AppBundle\Entity\Step

    AppBundle\Repository\UserRepository:
              factory: doctrine.orm.entity_manager:getRepository
              arguments:
                  - AppBundle\Entity\User

    AppBundle\Repository\VineyardRepository:
              factory: doctrine.orm.entity_manager:getRepository
              arguments:
                  - AppBundle\Entity\Vineyard

    AppBundle\Repository\WineProductRepository:
              factory: doctrine.orm.entity_manager:getRepository
              arguments:
                  - AppBundle\Entity\WineProduct
              tags: ['sonata.product.set.manager']

    AppBundle\Repository\ProductionRecipeRepository:
              factory: doctrine.orm.entity_manager:getRepository
              arguments:
                  - AppBundle\Entity\ProductionRecipe
    AppBundle\Repository\WineryRepository:
              factory: doctrine.orm.entity_manager:getRepository
              arguments:
                  - AppBundle\Entity\Winery
              public: true
    AppBundle\Repository\WineryFieldRepository:
              factory: doctrine.orm.entity_manager:getRepository
              arguments:
                  - AppBundle\Entity\WineryField
    AppBundle\Repository\FieldStepRepository:
              factory: doctrine.orm.entity_manager:getRepository
              arguments:
                  - AppBundle\Entity\FieldStep

    sonata_ecommerce_customer_repository:
        class: EcommerceBundle\CustomerBundle\Repository\CustomerRepository
        factory: doctrine.orm.entity_manager:getRepository
        public: true
        arguments:
            - EcommerceBundle\CustomerBundle\Entity\Customer

    sonata_ecommerce_customer_address_repository:
        class: EcommerceBundle\CustomerBundle\Repository\AddressRepository
        factory: doctrine.orm.entity_manager:getRepository
        public: true
        arguments:
            - EcommerceBundle\CustomerBundle\Entity\Address

    sonata_ecommerce_order_repository:
        class: EcommerceBundle\OrderBundle\Repository\OrderRepository
        factory: doctrine.orm.entity_manager:getRepository
        public: true
        arguments:
            - EcommerceBundle\OrderBundle\Entity\Order

    sonata_ecommerce_transaction_repository:
        class: EcommerceBundle\PaymentBundle\Repository\TransactionRepository
        factory: doctrine.orm.entity_manager:getRepository
        public: true
        arguments:
            - EcommerceBundle\PaymentBundle\Entity\Transaction

    acme_customer.customer_repository:
            class: Doctrine\ORM\EntityRepository
            factory: ['@doctrine.orm.default_entity_manager', getRepository]
            arguments:
                - AppBundle\Entity\FieldStep

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

    authentication_handler:
        class: AppBundle\Handler\AuthenticationHandler
        arguments: [ '@service_container', '@router' ]

    app.user.mailer:
        class: AppBundle\Service\AppTwigMailer
        arguments:
            - '@mailer'
            - '@router'
            - '@templating'
            -
                template:
                    confirmation: '%fos_user.registration.confirmation.template%'
                    resetting: '%fos_user.resetting.email.template%'
                from_email:
                    confirmation: '%fos_user.registration.confirmation.from_email%'
                    resetting: '%fos_user.resetting.email.from_email%'

    AppBundle\Handler\FileUploadHandler:
        arguments:
            $targetDir: '%upload_directory%'

#    AppBundle\EventSubscriber\ProgressChangeSubscriber:
#        tags:
#            - { name: doctrine.event_subscriber, event: preUpdate, lazy: true }



#    progress_changed_event:
#        class: AppBundle\EventSubscriber\ProgressChangedEventSubscriber
#        tags:
#            - { name: kernel.event_listener, event: progress_changed_event, method: onProgressChanged }


#    app.listener.pdo_exception_response_listener:
#            class: AppBundle\EventListener\PDOExceptionResponseListener
#            arguments: [ "@session" ]
#            tags:
#                - {name: kernel.event_listener, event: kernel.exception, method: onKernelResponse, priority: 10}

    app.akyna.pdo_listener:
        class: AppBundle\EventListener\YourExceptionListener
        arguments: [ "@session" ]
        tags:
           - { name: kernel.event_listener, event: kernel.exception, method: onPdoException, priority: 16 }

    AppBundle\Repository\IconRepository:
        factory: doctrine.orm.entity_manager:getRepository
        arguments:
            - AppBundle\Entity\Icon

    AppBundle\Repository\RateCommentRepository:
        factory: doctrine.orm.entity_manager:getRepository
        arguments:
            - AppBundle\Entity\RateComment

    AppBundle\Repository\FieldStepDecideRepository:
              factory: doctrine.orm.entity_manager:getRepository
              arguments:
                  - AppBundle\Entity\FieldStepDecide

    AppBundle\Repository\WineryFieldStepRepository:
              factory: doctrine.orm.entity_manager:getRepository
              arguments:
                  - AppBundle\Entity\WineryFieldStep

    AppBundle\Service\WineryApproveStepService:
        arguments: [ "@doctrine.orm.entity_manager" ]

    AppBundle\Service\ApproveAllStepService:
        arguments: [ "@doctrine.orm.entity_manager" ]

    AppBundle\Repository\CellarStepDecideRepository:
              factory: doctrine.orm.entity_manager:getRepository
              arguments:
                  - AppBundle\Entity\CellarStepDecide

    AppBundle\Repository\WineryCellarStepRepository:
              factory: doctrine.orm.entity_manager:getRepository
              arguments:
                  - AppBundle\Entity\WineryCellarStep

    app.conversation.repository:
        class: AppBundle\Repository\ConversationRepository
        factory: doctrine.orm.entity_manager:getRepository
        arguments:
            - AppBundle\Entity\Conversation
        calls:
            - method: setCurrentUser
              arguments:
                  - '@security.token_storage'

    app.notification.service:
        class: AppBundle\Service\GetNotificationCountService
        arguments: [ "@doctrine.orm.entity_manager" , '@app.conversation.repository' ]

#    app.form.country_extension:
#        class: AppBundle\Form\Extension\CountryTypeExtension
#        arguments: [ "@doctrine.orm.default_entity_manager", "@doctrine.orm.entity_manager" ]
#        tags:
#            - { name: form.type_extension, extended_type: Symfony\Component\Form\Extension\Core\Type\CountryType }
